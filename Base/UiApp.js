var UiApp = {};


/**
 * Constants to use with setFormat methods in UiApp widgets such as <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> and <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 * 
 * @class UiApp.DateTimeFormat
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_FULL
 * 
 * Use "DayOfWeek, YYYY Month DD" format, for example, "Monday, 2013 March 04".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_LONG
 * 
 * Use "YYYY Month D" format, for example, "2013 March 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_MEDIUM
 * 
 * Use "YYYY Mon D" format, for example, "2013 Mar 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_SHORT
 * 
 * Use "YYYY-MM-DD" format, for example, "2013-03-04".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_TIME_FULL
 * 
 * Use "DayOfWeek, YYYY Month DD HH:MM:SS UTC-#" format, for example, "Monday, 2013 March 04
 00:00:00 UTC-5".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_TIME_LONG
 * 
 * Use "YYYY Month D HH:MM:SS UTC-#" format, for example, "2013 March 4 00:00:00 UTC-5".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_TIME_MEDIUM
 * 
 * Use "YYYY Mon D HH:MM:SS" format, for example, "2013 Mar 4 00:00:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DATE_TIME_SHORT
 * 
 * Use "YYYY-MM-DD HH:MM" format, for example, "2013-03-04 00:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.DAY
 * 
 * Use the day number, for example, "4" for the 4th of the month.
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.HOUR24_MINUTE
 * 
 * Use "HH:MM" format, for example, "14:30".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.HOUR24_MINUTE_SECOND
 * 
 * Use "HH:MM:SS" format, for example, "14:30:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.HOUR_MINUTE
 * 
 * Use "HH:MM AM/PM" format, for example, "12:00 AM".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.HOUR_MINUTE_SECOND
 * 
 * Use "HH:MM:SS AM/PM" format, for example, "12:00:00 AM".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.ISO_8601
 * 
 * Use the ISO 8601 standard format, for example, "2013-03-04T00:00:00.000-05:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MINUTE_SECOND
 * 
 * Use "MM:SS" format, for example, "30:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH
 * 
 * Use the full month, for example, "March".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH_ABBR
 * 
 * Use the abbreviated month, for example, "Mar".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH_ABBR_DAY
 * 
 * Use "Mon D" format, for example, "Mar 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH_DAY
 * 
 * Use "Month D" format, for example, "March 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH_NUM_DAY
 * 
 * Use "M-D" format, for example, "3-4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.MONTH_WEEKDAY_DAY
 * 
 * Use "DayOfWeek Month D" format, for example, "Monday March 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.RFC_2822
 * 
 * Use the RFC 2822 standard format, for example, "Mon, 4 Mar 2013 00:00:00 -0500".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.TIME_FULL
 * 
 * Use "HH:MM:SS UTC-#" format, for example, "01:30:00 UTC-5".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.TIME_LONG
 * 
 * Use "HH:MM:SS UTC-#" format, for example, "01:30:00 UTC-5".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.TIME_MEDIUM
 * 
 * Use "HH:MM:SS" format, for example, "01:30:00".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.TIME_SHORT
 * 
 * Use "HH:MM" format, for example, "01:30".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR
 * 
 * Use "YYYY" format, for example, "2013".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH
 * 
 * Use "YYYY Month" format, for example, "2013 March".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_ABBR
 * 
 * Use "YYYY Mon" format, for example, "2013 Mar".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_ABBR_DAY
 * 
 * Use "YYYY Mon D" format, for example, "2013 Mar 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_DAY
 * 
 * Use "YYYY Month D" format, for example, "2013 March 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_NUM
 * 
 * Use "YYYY-M" format, for example, "2013-3".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_NUM_DAY
 * 
 * Use "YYYY-M-D" format, for example, "2013-3-4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_MONTH_WEEKDAY_DAY
 * 
 * Use "Wkdy, YYYY Mon D" format, for example, "Mon, 2013 Mar 4".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_QUARTER
 * 
 * Use "YYYY ### quarter" format, for example, "2013 1st quarter".
 */

/**
 * @typedef {UiApp.DateTimeFormat} UiApp.DateTimeFormat.YEAR_QUARTER_ABBR
 * 
 * Use "YYYY Q#" format, for example, "2013 Q1".
 */

/**
 * Constants to use with UiApp.createGoogleDocsPicker(); <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> and <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 * 
 * @class UiApp.FileType
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.ALL
 * 
 * Show all files
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.ALL_DOCS
 * 
 * Show all document file types
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.DOCUMENTS
 * 
 * Show documents
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.DRAWINGS
 * 
 * Show drawings
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.FOLDERS
 * 
 * Show folders
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.FORMS
 * 
 * Show forms
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.PDFS
 * 
 * Show PDFs
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.PHOTOS
 * 
 * Show photos
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.PHOTO_ALBUMS
 * 
 * Show photo albums
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.PRESENTATIONS
 * 
 * Show presentations
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.RECENTLY_PICKED
 * 
 * Show recently picked files
 */

/**
 * @typedef {UiApp.FileType} UiApp.FileType.SPREADSHEETS
 * 
 * Show spreadsheets
 */

/**
 * Constants to use with setHorizontalAlignment methods in UiApp.
 * 
 * @class UiApp.HorizontalAlignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.CENTER
 * 
 * Use center alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.DEFAULT
 * 
 * Use default alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.JUSTIFY
 * 
 * Use justify alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.LEFT
 * 
 * Use left alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.LOCALE_END
 * 
 * Use locale end alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.LOCALE_START
 * 
 * Use locale start alignment
 */

/**
 * @typedef {UiApp.HorizontalAlignment} UiApp.HorizontalAlignment.RIGHT
 * 
 * Use right alignment
 */

/**
 * Constants to use with setVerticalAlignment methods in UiApp.
 * 
 * @class UiApp.VerticalAlignment
 */

/**
 * @typedef {UiApp.VerticalAlignment} UiApp.VerticalAlignment.BOTTOM
 * 
 * Position at the bottom
 */

/**
 * @typedef {UiApp.VerticalAlignment} UiApp.VerticalAlignment.MIDDLE
 * 
 * Position at the middle
 */

/**
 * @typedef {UiApp.VerticalAlignment} UiApp.VerticalAlignment.TOP
 * 
 * Position at the top
 */

/**
 * Create a new UiInstance, which you can use to build a UI.

 <p>Use this in the entry point of your app to create a UI. For example:

 <pre class="prettyprint"><code>
 function doGet(e) {
   var app = UiApp.createApplication();
   // Create a button tied to a server click handler.
   app.add(app.createButton(&#39;Click me!&#39;, app.createServerHandler(&#39;onClick&#39;)).setId(&#39;button&#39;));
   // Create a button tied to a client click handler.
   app.add(app.createButton(&#39;Click me too!&#39;,
       app.createClientHandler().forEventSource().setText(&#39;Clicked!&#39;)));
   return app; // If you don&#39;t return the UiInstance, the change won&#39;t happen
 }

 function onClick(e) {
   var app = UiApp.getActiveApplication();
   app.getElementById(&#39;button&#39;).setText(&#39;Clicked!&#39;);
   return app;
 }
 </code></pre>

 <p>Note that you cannot return a new UiInstance in an event handler from an existing
 UiInstance.
 *
 * @return {UiApp.UiInstance} a new UiInstance.
 */
UiApp.createApplication = function(){};

/**
 * Gets the active UiInstance.

 <p>Use this in the context of an event handler to interact with the existing UI. For example:

 <pre class="prettyprint"><code>
 function doGet(e) {
   var app = UiApp.createApplication();
   app.add(app.createButton(&#39;Click me!&#39;, app.createServerHandler(&#39;onClick&#39;)).setId(&#39;button&#39;));
   return app;
 }

 function onClick(e) {
   var app = UiApp.getActiveApplication();
   app.getElementById(&#39;button&#39;).setText(&#39;Clicked!&#39;);
   return app;  // If you don&#39;t return the UiInstance, the change won&#39;t happen
 }
 </code></pre>
 *
 * @return {UiApp.UiInstance} the active UiInstance.
 */
UiApp.getActiveApplication = function(){};

/**
 * Return the browser user-agent string, so that you can tailor your app as needed.
 *
 * @return {String} the user-agent string.
 */
UiApp.getUserAgent = function(){};

/** @constructor */
UiApp.AbsolutePanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.AbsolutePanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.AbsolutePanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.AbsolutePanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.remove = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setVisible = function(visible){};

/**
 * Set the position of a widget that is already a child of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>. This
 will cause an error if the widget is not currently in the panel.
 *
 * @param {UiApp.Widget} widget - the widget to position.
 * @param {number} left - the widget's left position in pixels.
 * @param {number} top - the widget's top position in pixels.
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setWidgetPosition = function(widget, left, top){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.AbsolutePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code> itself, useful for chaining.
 */
UiApp.AbsolutePanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.Anchor = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Anchor.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Anchor.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Anchor.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setAccessKey = function(accessKey){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setDirection = function(direction){};

/**
 * Set whether this anchor is enabled.

 <p>This method is deprecated and has no effect.
 *
 * @param {Boolean} enabled - whether this anchor is enabled.
 *
 * @return {UiApp.Anchor} the Anchor itself, useful for chaining.
 */
UiApp.Anchor.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> should have the current focus.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setHeight = function(height){};

/**
 * Set the horizontal text alignment of the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Set the URL that this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> links to.
 *
 * @param {String} href - the new URL.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setHref = function(href){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setLayoutData = function(layout){};

/**
 * Set the name of this link, rather than the target. This allows the link to be used for internal
 hyperlinking within the app.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setTag = function(tag){};

/**
 * Set the target of this link.

 <p>The default target is '_blank' which opens the link in a new tab or window. Setting this to
 '_self' will open the link in the same window as the app (replacing the app).

 <p>This will only work if the app is being shown as a standalone service. It will have no
 effect when called inside a dialog, such as in a Google Spreadsheet.
 *
 * @param {String} target - the new target.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setTarget = function(target){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> should be visible or not.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setWidth = function(width){};

/**
 * Set whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> wraps its text.
 *
 * @param {Boolean} wordWrap - whether to wrap.
 *
 * @return {UiApp.Anchor} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code> itself, useful for chaining.
 */
UiApp.Anchor.prototype.setWordWrap = function(wordWrap){};

/** @constructor */
UiApp.Button = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Button.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Button.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Button.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> should have the current focus.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> should be visible or not.
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Button} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code> itself, useful for chaining.
 */
UiApp.Button.prototype.setWidth = function(width){};

/** @constructor */
UiApp.CaptionPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>. This is a synonym for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html#setWidget(Widget)'>setWidget(widget)</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.CaptionPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.CaptionPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.CaptionPanel.prototype.getType = function(){};

/**
 * Set the caption of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>. Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html#setText(String)'>setText(text)</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setCaptionText = function(text){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>. Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html#setWidget(Widget)'>setWidget(widget)</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setContentWidget = function(widget){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CaptionPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code> itself, useful for chaining.
 */
UiApp.CaptionPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.CheckBox = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.CheckBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.CheckBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.CheckBox.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setFocus = function(focus){};

/**
 * Set the value property on the input element that backs this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>. This is the
 value that will be associated with the CheckBox's name and submitted to the server if a
 FormPanel that holds it is submitted and the box is checked.
 *
 * @param {String} formValue - the new form value.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setFormValue = function(formValue){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>. The specified height may not take effect unless
 the element's CSS <code>display</code> property is set to <code>inline-block</code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> in pixels. The specified size many not take effect
 unless the element's CSS <code>display property</code> is set to <code>inline-block</code>.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>. The specified size many not take effect unless the
 element's CSS <code>display property</code> is set to <code>inline-block</code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setTitle = function(title){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> should be checked. Does not fire any events if the value
 changes as a result of this call.
 *
 * @param {Boolean} value - the new checked/unchecked state.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>. The specified width may not take effect unless the
 element's CSS <code>display</code> property is set to <code>inline-block</code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.CheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.CheckBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.ClientHandler = function(){};

/**
 * Sets the target of this handler for subsequent directives to be whatever widget triggered the
 event that this handler was called for. This does not change the target for any previous
 directives.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.forEventSource = function(){};

/**
 * Sets the target of this handler for subsequent directives to be the given widgets. This does
 not change the target for any previous directives.
 *
 * @param {Object...} widgets - the widgets to target.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.forTargets = function(widgets){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ClientHandler.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ClientHandler.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ClientHandler.prototype.getType = function(){};

/**
 * A directive to set the enabled/disabled state of the widgets this handler is targeted to. This
 will fail if the widgets being targeted do not support being enabled or disabled.
 *
 * @param {Boolean} enabled - whether the targeted widgets should be enabled.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setEnabled = function(enabled){};

/**
 * A directive to set the html text of the widgets this handler is targeted to. This will fail if
 the widgets being targeted do not support having html text set.
 *
 * @param {String} html - the new html text for the targeted widgets.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setHTML = function(html){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setId = function(id){};

/**
 * A directive to set a style attribute on a grid element. This will fail if the widgets the
 handler is targeted to are not grids.
 *
 * @param {number} row - the row of the grid.
 * @param {number} column - the column of the grid.
 * @param {String} attribute - the CSS attribute to set. Use camelCase (e.g. fontSize, not font-size).
 * @param {String} value - the CSS value to set.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setStyleAttribute = function(row, column, attribute, value){};

/**
 * A directive to set multiple style attributes on a grid element. This will fail if the widgets
 the handler is targeted to are not grids.
 *
 * @param {number} row - the row of the grid.
 * @param {number} column - the column of the grid.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setStyleAttributes = function(row, column, attributes){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setTag = function(tag){};

/**
 * A directive to set the text of the widgets this handler is targeted to. This will fail if the
 widgets being targeted do not support having their text set.
 *
 * @param {String} text - the new text for the targeted widgets.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setText = function(text){};

/**
 * A directive to set the boolean value of the widgets this handler is targeted to. This will fail
 if the widgets being targeted do not support having a boolean value set.
 *
 * @param {Boolean} value - the new value for the targeted widgets.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setValue = function(value){};

/**
 * A directive to set the visibility of the widgets this handler is targeted to. This will fail if
 the widgets being targeted do not support being made invisible.
 *
 * @param {Boolean} visible - whether the targeted widgets should be visible.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.setVisible = function(visible){};

/**
 * Sets this handler to fire only if the given widget's value is a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is between
 min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value matches this regular expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value is not a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is less
 than min or greater than max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value does not match this regular
 expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is not one of the strings given in
 the options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of unacceptable values
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as a number
 that is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are not numbers, or that
 do not sum up to the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNotSum = function(widgets, sum){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is one of the strings given in the
 options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of acceptable values
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number and
 is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are numbers and sum up to
 the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.ClientHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ClientHandler.prototype.validateSum = function(widgets, sum){};

/** @constructor */
UiApp.Component = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Component.prototype.getId = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Component.prototype.getType = function(){};

/** @constructor */
UiApp.DateBox = function(){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DateBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DateBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DateBox.prototype.getType = function(){};

/**
 * Hide the date picker.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.hideDatePicker = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setEnabled = function(enabled){};

/**
 * Sets whether value changed events are fired for invalid or empty input in the box.

 <p>If this is false, which is the default, value change events will only be fired for valid
 dates selected from the picker or typed into the box. If this is true, a value change event
 will be fired when the box is changed from a valid date string to an invalid or empty string,
 with the date value in the event set to null. No value change event will be fired if the box is
 changed from one invalid string to another, since all invalid or empty dates are equivalently
 treated as null dates.
 *
 * @param {Boolean} fireEvents - if set to true, value change events will be fired when the box is changed
     from a valid date string to an invalid or empty string, with the date value in the event
     set to null.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setFireEventsForInvalid = function(fireEvents){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setFocus = function(focus){};

/**
 * Sets the format used to control formatting and parsing of dates in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>If this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> is not empty, the contents will be replaced with current
 contents in the new format.
 *
 * @param {UiApp.DateTimeFormat} dateTimeFormat - the desired format such as UiApp.DateTimeFormat.DATE_TIME_FULL.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setFormat = function(dateTimeFormat){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setTitle = function(title){};

/**
 * Sets the date shown by this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {Date} date - the new date value.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setValue = function(date){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.setWidth = function(width){};

/**
 * Parses the current <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>'s value and shows that date.
 *
 * @return {UiApp.DateBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code> itself, useful for chaining.
 */
UiApp.DateBox.prototype.showDatePicker = function(){};

/** @constructor */
UiApp.DatePicker = function(){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DatePicker.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DatePicker.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DatePicker.prototype.getType = function(){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> to show the given month without selecting a particular date.
 *
 * @param {Date} date - the date containing the month to show. For example, setCurrentMonth(new
     Date("January 1, 2000")) sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> to show January 2000.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setCurrentMonth = function(date){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setTitle = function(title){};

/**
 * Sets the date shown by this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {Date} date - the new date value.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setValue = function(date){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> should be visible or not.
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DatePicker} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code> itself, useful for chaining.
 */
UiApp.DatePicker.prototype.setWidth = function(width){};

/** @constructor */
UiApp.DecoratedStackPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.add = function(widget){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.add = function(widget, text){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DecoratedStackPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DecoratedStackPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DecoratedStackPanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.remove = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setSize = function(width, height){};

/**
 * Sets the text associated with a child by its index.
 *
 * @param {number} index - the index of the stack element whose text we want to change.
 * @param {String} text - the new text.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setStackText = function(index, text){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedStackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedStackPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.DecoratedTabBar = function(){};

/**
 * Add a handler that fires before the selection occurs.

 <p>This is deprecated in favor of addSelectionHandler, because there is no way to cancel the
 selection so they are functionally identical.
 *
 * @param {UiApp.Handler} handler - the handler to invoke.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addBeforeSelectionHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addStyleName = function(styleName){};

/**
 * Add a tab with the given title.
 *
 * @param {String} title - the new tab's title.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addTab = function(title){};

/**
 * Add a tab with the given title.
 *
 * @param {String} title - the new tab's title.
 * @param {Boolean} asHtml - whether to treat the title as HTML.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.addTab = function(title, asHtml){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DecoratedTabBar.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DecoratedTabBar.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DecoratedTabBar.prototype.getType = function(){};

/**
 * Select a tab by index.
 *
 * @param {number} index - the index of the tab to select.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.selectTab = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setStylePrimaryName = function(styleName){};

/**
 * Set whether the given tab is enabled.
 *
 * @param {number} index - the tab index.
 * @param {Boolean} enabled - whether the tab should be enabled.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setTabEnabled = function(index, enabled){};

/**
 * Set the header text of a given tab.
 *
 * @param {number} index - the index of the tab.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setTabText = function(index, text){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> should be visible or not.
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabBar.prototype.setWidth = function(width){};

/** @constructor */
UiApp.DecoratedTabPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.add = function(widget){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.add = function(widget, text){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 * @param {Boolean} asHtml - whether to treat the text as HTML.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.add = function(widget, text, asHtml){};

/**
 * Add a handler that fires before the selection occurs.

 <p>This is deprecated in favor of addSelectionHandler, because there is no way to cancel the
 selection so they are functionally identical.
 *
 * @param {UiApp.Handler} handler - the handler to invoke.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.addBeforeSelectionHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DecoratedTabPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DecoratedTabPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DecoratedTabPanel.prototype.getType = function(){};

/**
 * Select a tab by index.
 *
 * @param {number} index - the index of the tab to select.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.selectTab = function(index){};

/**
 * Sets whether changing tabs <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate changing tabs.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratedTabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratedTabPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.DecoratorPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DecoratorPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DecoratorPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DecoratorPanel.prototype.getType = function(){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DecoratorPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code> itself, useful for chaining.
 */
UiApp.DecoratorPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.DialogBox = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.add = function(widget){};

/**
 * Set the partner widget for auto-hiding.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} partner - the partner widget.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.addAutoHidePartner = function(partner){};

/**
 * Add a handler for close events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addCloseHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.addCloseHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DialogBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.DialogBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DialogBox.prototype.getType = function(){};

/**
 * Hides the popup.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.hide = function(){};

/**
 * Sets whether opening and closing the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate opening and closing.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Enable or disable the autoHide feature.

 <p>When enabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> will be automatically hidden when the user clicks
 outside of it.
 *
 * @param {Boolean} enabled - whether auto-hiding should be enabled.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setAutoHideEnabled = function(enabled){};

/**
 * Enable or disable a "glass" pane.

 <p>When enabled, the background will be blocked with a semi-transparent pane the next time it
 is shown. If the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> is already visible, the glass will not be displayed
 until it is hidden and shown again.
 *
 * @param {Boolean} enabled - whether the glass panel should be enabled.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setGlassEnabled = function(enabled){};

/**
 * Set the style name of the glass panel.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setGlassStyleName = function(styleName){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setLayoutData = function(layout){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> is in "modal" mode.

 <p>When the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> is modal, keyboard or mouse events that do not target the
 PopupPanel or its children will be ignored.
 *
 * @param {Boolean} modal - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> should be modal.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setModal = function(modal){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets the popup's position relative to the browser's client area.

 <p>The popup's position may be set before calling show().
 *
 * @param {number} left - the popup's left, in pixels.
 * @param {number} top - the popup's top, in pixels.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setPopupPosition = function(left, top){};

/**
 * Set the popup position.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} a - 
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setPopupPositionAndShow = function(a){};

/**
 * When enabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> will preview all native events, even if another popup
 was opened after this one.

 <p>What this practically means is that if autoHide is enabled, enabling this feature will cause
 the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> to autoHide even if another non-modal popup was shown after it. If
 this feature is disabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> will only autoHide if it was the last
 popup opened.
 *
 * @param {Boolean} previewing - whether to preview all native events.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setPreviewingAllNativeEvents = function(previewing){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setTag = function(tag){};

/**
 * Sets the text inside the caption.
 *
 * @param {String} text - the new caption text.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.setWidth = function(width){};

/**
 * Shows the popup.
 *
 * @return {UiApp.DialogBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code> itself, useful for chaining.
 */
UiApp.DialogBox.prototype.show = function(){};

/** @constructor */
UiApp.DocsListDialog = function(){};

/**
 * Add a handler for close events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addCloseHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.addCloseHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.addSelectionHandler = function(handler){};

/**
 * Add a type of file that this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> will show.
 *
 * @param {UiApp.FileType} fileType - the type of file to add.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.addView = function(fileType){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.DocsListDialog.prototype.getId = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.DocsListDialog.prototype.getType = function(){};

/**
 * Set the title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code>.
 *
 * @param {String} title - the new title.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setDialogTitle = function(title){};

/**
 * Set the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code>.
 *
 * @param {number} height - the new height, in pixels.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setHeight = function(height){};

/**
 * Set the initial type of file that this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> will show.
 *
 * @param {UiApp.FileType} fileType - the type of file to show.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setInitialView = function(fileType){};

/**
 * Set whether multiple items can be selected.
 *
 * @param {Boolean} multiSelectEnabled - whether multiple items can be selected.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setMultiSelectEnabled = function(multiSelectEnabled){};

/**
 * Sets an OAuth token to use when fetching data for the dialog. This token must be on behalf of
 the user whose content should be shown.

 <p>It is mandatory to call this method before calling <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html#showDocsPicker()'>showDocsPicker()</a></s></code>.

 <p>If the script is running as the same user, this method can be used in combination with
 <code><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/../script/script-app.html#getOAuthToken()'>ScriptApp.getOAuthToken()</a></code>. If
 you need to obtain an OAuth token manually, see <code><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/../script/script-app.html#newStateToken()'>ScriptApp.newStateToken()</a></code>.

 <p>The scopes for the token should include the scopes specified in the <a
 href="https://developers.google.com/picker/docs/reference">Picker Reference Documentation </a>.
 If the only scope needed is for Google Drive, using <code><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/../drive/drive-app.html'>DriveApp</a></code> anywhere in the script will
 automatically set up the correct scope.
 *
 * @param {String} oAuthToken - the OAuth token.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setOAuthToken = function(oAuthToken){};

/**
 * Set the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code>.
 *
 * @param {number} width - the new width, in pixels.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.setWidth = function(width){};

/**
 * Show this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code>.
 *
 * @return {UiApp.DocsListDialog} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code> itself, useful for chaining.
 */
UiApp.DocsListDialog.prototype.showDocsPicker = function(){};

/** @constructor */
UiApp.FileUpload = function(){};

/**
 * Add a handler for change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;change&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.addChangeHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.FileUpload.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.FileUpload.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.FileUpload.prototype.getType = function(){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setEnabled = function(enabled){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> should be visible or not.
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FileUpload} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code> itself, useful for chaining.
 */
UiApp.FileUpload.prototype.setWidth = function(width){};

/** @constructor */
UiApp.FlexTable = function(){};

/**
 * Appends a cell to the specified row.

 <p>This will cause an error if the row does not exist.
 *
 * @param {number} row - the row to which the new cell will be added.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.addCell = function(row){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.addClickHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.FlexTable.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.FlexTable.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.FlexTable.prototype.getType = function(){};

/**
 * Inserts a cell into the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This will cause an error if either the row or column do not exist.
 *
 * @param {number} beforeRow - the row before which the new cell will be added.
 * @param {number} beforeColumn - the column before which the new cell will be added.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.insertCell = function(beforeRow, beforeColumn){};

/**
 * Inserts a row into the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> before the given row.

 <p>This will cause an error if the row does not exist.
 *
 * @param {number} beforeRow - the row before which the new row will be added.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.insertRow = function(beforeRow){};

/**
 * Removes the specified cell from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row of the cell to remove.
 * @param {number} column - the column of the cell to remove.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.removeCell = function(row, column){};

/**
 * Removes a number of cells from one row in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row of the cells to be removed.
 * @param {number} column - the column of the first cell to be removed.
 * @param {number} num - the number of cells to be removed.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.removeCells = function(row, column, num){};

/**
 * Removes the specified row from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row to be removed.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.removeRow = function(row){};

/**
 * Sets the border width.
 *
 * @param {number} width - the border width, in pixels.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setBorderWidth = function(width){};

/**
 * Sets the padding within cells.
 *
 * @param {number} padding - the padding, in pixels.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setCellPadding = function(padding){};

/**
 * Sets the spacing between cells.
 *
 * @param {number} spacing - the spacing, in pixels.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setCellSpacing = function(spacing){};

/**
 * Sets a CSS style on a column of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} column - the column number.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setColumnStyleAttribute = function(column, attribute, value){};

/**
 * Sets a CSS style on a column of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} column - the column number.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setColumnStyleAttributes = function(column, attributes){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setPixelSize = function(width, height){};

/**
 * Sets a CSS style on a row of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row number.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setRowStyleAttribute = function(row, attribute, value){};

/**
 * Sets a CSS style on a row of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row number.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setRowStyleAttributes = function(row, attributes){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setSize = function(width, height){};

/**
 * Sets a CSS style on a cell of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setStyleAttribute = function(row, column, attribute, value){};

/**
 * Sets a CSS style on a cell of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setStyleAttributes = function(row, column, attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setTag = function(tag){};

/**
 * Sets the contents of a given cell to the given text. This will remove any widget in the cell if
 one was there.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {String} text - the text to insert.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setText = function(row, column, text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> should be visible or not.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setVisible = function(visible){};

/**
 * Sets the widget in a given cell. A cell can contain at most one widget.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {UiApp.Widget} widget - the widget to insert.
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setWidget = function(row, column, widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlexTable} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code> itself, useful for chaining.
 */
UiApp.FlexTable.prototype.setWidth = function(width){};

/** @constructor */
UiApp.FlowPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.FlowPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.FlowPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.FlowPanel.prototype.getType = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> at a specific index.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {number} beforeIndex - the index to insert the widget before.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.insert = function(widget, beforeIndex){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.remove = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FlowPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FlowPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.FocusPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.add = function(widget){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.FocusPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.FocusPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.FocusPanel.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setAccessKey = function(accessKey){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> should have the current focus.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FocusPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FocusPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.FormPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for when the form is submitted and the server has finished processing the
 results.

 <p>This handler is in addition to the "doGet" or "doPost" that will automatically be called
 when the form is submitted, and is called after they have completed and returned their result.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var submitButton = app.createSubmitButton();
   var form = app.createFormPanel();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   form.addSubmitCompleteHandler(handler);
   form.add(textBox);
   form.add(submitButton);
   app.add(form);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;submitcomplete&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 The values of any child widgets which have a setName function and whose names have been set
 will be passed up as well. In addition, the values of certain widgets can be sent up with the
 event, as "callback elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.addSubmitCompleteHandler = function(handler){};

/**
 * Add a handler for when the form is submitted.

 <p>This handler is in addition to the "doGet" or "doPost" that will automatically be called
 when the form is submitted, and is called before them.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var submitButton = app.createSubmitButton();
   var form = app.createFormPanel();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   form.addSubmitHandler(handler);
   form.add(textBox);
   form.add(submitButton);
   app.add(form);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;submit&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 The values of any child widgets which have a setName function and whose names have been set
 will be passed up as well. In addition, the values of certain widgets can be sent up with the
 event, as "callback elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.addSubmitHandler = function(handler){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.FormPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.FormPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.FormPanel.prototype.getType = function(){};

/**
 * Sets the URL to submit this form to.

 <p>By default the form is submitted back to the original script, which can handle it in a
 "doPost" method.
 *
 * @param {String} action - the URL to submit the form to. May either be a relative URL or an absolute URL
     with an HTTP or HTTPS scheme.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setAction = function(action){};

/**
 * Sets the encoding used for submitting this form.

 <p>Valid values are "multipart/form-data‎" and "application/x-www-form-urlencoded", which is
 the default. There is rarely a reason to change this setting.
 *
 * @param {String} encoding - the encoding to use.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setEncoding = function(encoding){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the HTTP method used for submitting this form.

 <p>Valid values are "get" and "post". The default is "post".
 *
 * @param {String} method - the HTTP method to use.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setMethod = function(method){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.FormPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code> itself, useful for chaining.
 */
UiApp.FormPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.Grid = function(){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.addClickHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Grid.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Grid.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Grid.prototype.getType = function(){};

/**
 * Resizes the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} rows - the new number of rows.
 * @param {number} columns - the new number of columns.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.resize = function(rows, columns){};

/**
 * Sets the border width.
 *
 * @param {number} width - the border width, in pixels.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setBorderWidth = function(width){};

/**
 * Sets the padding within cells.
 *
 * @param {number} padding - the padding, in pixels.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setCellPadding = function(padding){};

/**
 * Sets the spacing between cells.
 *
 * @param {number} spacing - the spacing, in pixels.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setCellSpacing = function(spacing){};

/**
 * Sets a CSS style on a column of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} column - the column number.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setColumnStyleAttribute = function(column, attribute, value){};

/**
 * Sets a CSS style on a column of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} column - the column number.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setColumnStyleAttributes = function(column, attributes){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setPixelSize = function(width, height){};

/**
 * Sets a CSS style on a row of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} row - the row number.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setRowStyleAttribute = function(row, attribute, value){};

/**
 * Sets a CSS style on a row of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} row - the row number.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setRowStyleAttributes = function(row, attributes){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setSize = function(width, height){};

/**
 * Sets a CSS style on a cell of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setStyleAttribute = function(row, column, attribute, value){};

/**
 * Sets a CSS style on a cell of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {Object} attributes - the CSS attributes and values to set.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setStyleAttributes = function(row, column, attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setTag = function(tag){};

/**
 * Sets the contents of a given cell to the given text. This will remove any widget in the cell if
 one was there.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {String} text - the text to insert.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setText = function(row, column, text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> should be visible or not.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setVisible = function(visible){};

/**
 * Sets the widget in a given cell. A cell can contain at most one widget.
 *
 * @param {number} row - the row of the cell.
 * @param {number} column - the column of the cell.
 * @param {UiApp.Widget} widget - the widget to insert.
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setWidget = function(row, column, widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Grid} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code> itself, useful for chaining.
 */
UiApp.Grid.prototype.setWidth = function(width){};

/** @constructor */
UiApp.HTML = function(){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.HTML.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.HTML.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.HTML.prototype.getType = function(){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setDirection = function(direction){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setHeight = function(height){};

/**
 * Set the horizontal text alignment of the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> should be visible or not.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setWidth = function(width){};

/**
 * Set whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> wraps its text.
 *
 * @param {Boolean} wordWrap - whether to wrap.
 *
 * @return {UiApp.HTML} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> itself, useful for chaining.
 */
UiApp.HTML.prototype.setWordWrap = function(wordWrap){};

/** @constructor */
UiApp.Handler = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Handler.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Handler.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Handler.prototype.getType = function(){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.setId = function(id){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.setTag = function(tag){};

/**
 * Sets this handler to fire only if the given widget's value is a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is between
 min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value matches this regular expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value is not a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is less
 than min or greater than max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value does not match this regular
 expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is not one of the strings given in
 the options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of unacceptable values
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as a number
 that is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are not numbers, or that
 do not sum up to the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNotSum = function(widgets, sum){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is one of the strings given in the
 options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of acceptable values
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number and
 is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are numbers and sum up to
 the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.Handler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/handler.html'>Handler</a></s></code> itself, useful for chaining.
 */
UiApp.Handler.prototype.validateSum = function(widgets, sum){};

/** @constructor */
UiApp.Hidden = function(){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} styleName - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.addStyleDependentName = function(styleName){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} styleName - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Hidden.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Hidden.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Hidden.prototype.getType = function(){};

/**
 * Set the default value of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> if nothing else is set.
 *
 * @param {String} value - the new default value.
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setDefaultValue = function(value){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} height - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setHeight = function(height){};

/**
 * Set the DOM ID of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.

 <p>Note that this is not the same as setId with a lowercase 'd'.
 *
 * @param {String} id - the new id.
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setID = function(id){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setName = function(name){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {number} width - 
 * @param {number} height - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setPixelSize = function(width, height){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} width - 
 * @param {String} height - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setSize = function(width, height){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} attribute - 
 * @param {String} value - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setStyleAttributes = function(attributes){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} styleName - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setStyleName = function(styleName){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} styleName - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setTag = function(tag){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} title - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setTitle = function(title){};

/**
 * Sets the value of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.
 *
 * @param {String} value - the new value.
 *
 * @return {UiApp.Hidden} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> itself, useful for chaining.
 */
UiApp.Hidden.prototype.setValue = function(value){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {Boolean} visible - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setVisible = function(visible){};

/**
 * This method is deprecated and has no effect for <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> widgets.
 *
 * @param {String} width - 
 *
 * @return {UiApp.Hidden} this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>, for chaining.
 */
UiApp.Hidden.prototype.setWidth = function(width){};

/** @constructor */
UiApp.HorizontalPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.HorizontalPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.HorizontalPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.HorizontalPanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.remove = function(index){};

/**
 * Sets the width of the border to be applied to all cells in this panel.

 <p>This is particularly useful when debugging layouts, in that it allows you to see explicitly
 the cells that contain this panel's children.
 *
 * @param {number} width - the new border width, in pixels.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setBorderWidth = function(width){};

/**
 * Sets the height of the cell associated with the given widget, related to the panel as a whole.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to use in identifying the cell.
 * @param {String} height - the height in any valid CSS unit, such as "10px" or "15cm".
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setCellHeight = function(widget, height){};

/**
 * Sets the horizontal alignment of the given widget within its cell.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to align.
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setCellHorizontalAlignment = function(widget, horizontalAlignment){};

/**
 * Sets the vertical alignment of the given widget within its cell.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to align.
 * @param {UiApp.VerticalAlignment} verticalAlignment - the desired alignment, such as UiApp.VerticalAlignment.MIDDLE.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setCellVerticalAlignment = function(widget, verticalAlignment){};

/**
 * Sets the width of the cell associated with the given widget, related to the panel as a whole.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to use in identifying the cell.
 * @param {String} width - the width in any valid CSS unit, such as "10px" or "15cm".
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setCellWidth = function(widget, width){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setHeight = function(height){};

/**
 * Set the horizontal alignment of widgets added to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setSize = function(width, height){};

/**
 * Sets the amount of spacing between this panel's cells.
 *
 * @param {number} spacing - the spacing, in pixels.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setSpacing = function(spacing){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setTitle = function(title){};

/**
 * Set the vertical alignment of widgets added to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {UiApp.VerticalAlignment} verticalAlignment - the desired alignment, such as UiApp.VerticalAlignment.MIDDLE.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setVerticalAlignment = function(verticalAlignment){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.HorizontalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.HorizontalPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.Image = function(){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for error events (failed loads).

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var image = app.createImage(&quot;some image url&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   image.addErrorHandler(handler);
   app.add(image);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;error&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addErrorHandler = function(handler){};

/**
 * Add a handler for load events.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var image = app.createImage(&quot;some image url&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   image.addLoadHandler(handler);
   app.add(image);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;load&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addLoadHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Image.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Image.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Image.prototype.getType = function(){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setPixelSize = function(width, height){};

/**
 * Set the resource for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} resource - 
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setResource = function(resource){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setTitle = function(title){};

/**
 * Sets the URL of the image to be displayed.

 <p>If the image is in the clipped state, a call to this method will cause a transition of the
 image to the unclipped state. Regardless of whether or not the image is in the clipped or
 unclipped state, a load event will be fired.
 *
 * @param {String} url - the new image url.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setUrl = function(url){};

/**
 * Sets the url and the visibility rectangle for the image at the same time.

 <p>A single load event will be fired if either the incoming url or visiblity rectangle
 coordinates differ from the image's current url or current visibility rectangle coordinates. If
 the image is currently in the unclipped state, a call to this method will cause a transition to
 the clipped state.
 *
 * @param {String} url - the new image url.
 * @param {number} left - the the horizontal coordinate of the upper-left vertex of the visibility rectangle,
     in pixels.
 * @param {number} top - the the vertical coordinate of the upper-left vertex of the visibility rectangle, in
     pixels.
 * @param {number} width - the width of the visibility rectangle.
 * @param {number} height - the height of the visibility rectangle.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setUrlAndVisibleRect = function(url, left, top, width, height){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> should be visible or not.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setVisible = function(visible){};

/**
 * Sets the visibility rectangle of an image.

 <p>The visibility rectangle is declared relative to the the rectangle which encompasses the
 entire image, which has an upper-left vertex of (0,0). Provided that any of the left, top,
 width, and height parameters are different than the those values that are currently set for the
 image, a load event will be fired. If the image is in the unclipped state, a call to this
 method will cause a transition of the image to the clipped state. This transition will cause a
 load event to fire.
 *
 * @param {number} left - the the horizontal coordinate of the upper-left vertex of the visibility rectangle,
     in pixels.
 * @param {number} top - the the vertical coordinate of the upper-left vertex of the visibility rectangle, in
     pixels.
 * @param {number} width - the width of the visibility rectangle.
 * @param {number} height - the height of the visibility rectangle.
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setVisibleRect = function(left, top, width, height){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Image} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> itself, useful for chaining.
 */
UiApp.Image.prototype.setWidth = function(width){};

/** @constructor */
UiApp.InlineLabel = function(){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.InlineLabel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.InlineLabel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.InlineLabel.prototype.getType = function(){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setDirection = function(direction){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setHeight = function(height){};

/**
 * Set the horizontal text alignment of the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> should be visible or not.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setWidth = function(width){};

/**
 * Set whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> wraps its text.
 *
 * @param {Boolean} wordWrap - whether to wrap.
 *
 * @return {UiApp.InlineLabel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> itself, useful for chaining.
 */
UiApp.InlineLabel.prototype.setWordWrap = function(wordWrap){};

/** @constructor */
UiApp.Label = function(){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Label.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Label.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Label.prototype.getType = function(){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setDirection = function(direction){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setHeight = function(height){};

/**
 * Set the horizontal text alignment of the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> should be visible or not.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setWidth = function(width){};

/**
 * Set whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> wraps its text.
 *
 * @param {Boolean} wordWrap - whether to wrap.
 *
 * @return {UiApp.Label} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> itself, useful for chaining.
 */
UiApp.Label.prototype.setWordWrap = function(wordWrap){};

/** @constructor */
UiApp.ListBox = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;change&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addChangeHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addFocusHandler = function(handler){};

/**
 * Adds an item to the list box.

 <p>The item's value will be the same as its text.
 *
 * @param {String} text - the new item's text.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addItem = function(text){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.addStyleName = function(styleName){};

/**
 * Removes all items from the list box.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ListBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ListBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ListBox.prototype.getType = function(){};

/**
 * Removes the item at the specified index.
 *
 * @param {number} index - the index of the item to be removed.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.removeItem = function(index){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setId = function(id){};

/**
 * Selects the item at the specified index.

 <p>In a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> with multiple selection enabled, this will alter whether the given
 item is selected but will not alter any other items. In a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> with multiple
 selection disabled, selecting an item will cause all other items to be deselected. Note that
 setting the selection programmatically does not cause a change event to be fired.
 *
 * @param {number} index - the index of the item to be selected.
 * @param {Boolean} selected - whether the item should be selected or not.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setItemSelected = function(index, selected){};

/**
 * Sets the text associated with the item at a given index.
 *
 * @param {number} index - the index of the item to be changed.
 * @param {String} text - the item's new text.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setItemText = function(index, text){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setPixelSize = function(width, height){};

/**
 * Selects the item at the specified index.

 <p>After calling this method, only the specified item in the list will remain selected. For a
 <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> with multiple selection enabled, see setItemSelected to select multiple
 items at a time. Note that setting the selection programmatically does not cause a change event
 to be fired.
 *
 * @param {number} index - the index of the item to be selected.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setSelectedIndex = function(index){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setTitle = function(title){};

/**
 * Sets the value associated with the item at a given index.

 <p>This is passed to the server when the list box is submitted as part of a FormPanel.
 *
 * @param {number} index - the index of the item to be changed.
 * @param {String} value - the item's new value.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setValue = function(index, value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setVisible = function(visible){};

/**
 * Sets the number of items that are visible.

 <p>If only one item is visible, then the box will be displayed as a drop-down list.
 *
 * @param {number} count - the number of items to show.
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setVisibleItemCount = function(count){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ListBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code> itself, useful for chaining.
 */
UiApp.ListBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.MenuBar = function(){};

/**
 * Add a handler for close events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addCloseHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addCloseHandler = function(handler){};

/**
 * Add a new menu item to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {MenuItem} item - the item to add.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addItem = function(item){};

/**
 * Creates a new menu item with the given text and submenu and adds it to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} text - the item text.
 * @param {Boolean} asHtml - whether to treat the text as HTML.
 * @param {MenuBar} subMenu - the menu to show when this item is clicked.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addItem = function(text, asHtml, subMenu){};

/**
 * Creates a new menu item with the given text and command and adds it to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} text - the item text.
 * @param {Boolean} asHtml - whether to treat the text as HTML.
 * @param {UiApp.Handler} command - the ClientHandler or ServerHandler to execute when the menu is clicked.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addItem = function(text, asHtml, command){};

/**
 * Creates a new menu item with the given text and submenu and adds it to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} text - the item text.
 * @param {MenuBar} subMenu - the menu to show when this item is clicked.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addItem = function(text, subMenu){};

/**
 * Add a separator to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addSeparator = function(){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.MenuBar.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.MenuBar.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.MenuBar.prototype.getType = function(){};

/**
 * Sets whether opening and closing the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate opening and closing.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Sets whether this menu bar's child menus will open when the mouse is moved over it.
 *
 * @param {Boolean} autoOpen - whether to open when the mouse is over the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setAutoOpen = function(autoOpen){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> should be visible or not.
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code> itself, useful for chaining.
 */
UiApp.MenuBar.prototype.setWidth = function(width){};

/** @constructor */
UiApp.MenuItem = function(){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.MenuItem.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.MenuItem.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.MenuItem.prototype.getType = function(){};

/**
 * Sets the handler to execute when the menu is clicked.
 *
 * @param {UiApp.Handler} handler - the ClientHandler or ServerHandler to execute when the menu is clicked.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setCommand = function(handler){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setId = function(id){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the sub-menu to show when the menu is clicked.
 *
 * @param {MenuBar} subMenu - the sub-menu to show when the menu is clicked.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setSubMenu = function(subMenu){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> should be visible or not.
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItem.prototype.setWidth = function(width){};

/** @constructor */
UiApp.MenuItemSeparator = function(){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.MenuItemSeparator.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.MenuItemSeparator.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.MenuItemSeparator.prototype.getType = function(){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setId = function(id){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> should be visible or not.
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.MenuItemSeparator} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code> itself, useful for chaining.
 */
UiApp.MenuItemSeparator.prototype.setWidth = function(width){};

/** @constructor */
UiApp.PasswordTextBox = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;change&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addChangeHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.PasswordTextBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.PasswordTextBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.PasswordTextBox.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets the cursor position inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the new cursor position, in characters from the start.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setCursorPos = function(position){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setDirection = function(direction){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the maximum allowable length of the text box's contents.
 *
 * @param {number} length - the maximum length.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setMaxLength = function(length){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets whether the text in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> is read only and can't be edited.
 *
 * @param {Boolean} readOnly - whether the text is read only.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setReadOnly = function(readOnly){};

/**
 * Sets the range of text to be selected.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the position of the first character to be selected
 * @param {number} length - the number of characters to be selected
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setSelectionRange = function(position, length){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setText = function(text){};

/**
 * Sets the text alignment of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} textAlign - the alignment
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setTextAlignment = function(textAlign){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setTitle = function(title){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>'s value without firing any events.
 *
 * @param {String} value - the new value.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setVisible = function(visible){};

/**
 * Sets the number of visible characters in the text box.

 <p>This is not an exact value, as not all characters are created equal.
 *
 * @param {number} length - the length, in characters.
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setVisibleLength = function(length){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PasswordTextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code> itself, useful for chaining.
 */
UiApp.PasswordTextBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.PopupPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.add = function(widget){};

/**
 * Set the partner widget for auto-hiding.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} partner - the partner widget.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.addAutoHidePartner = function(partner){};

/**
 * Add a handler for close events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addCloseHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.addCloseHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.PopupPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.PopupPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.PopupPanel.prototype.getType = function(){};

/**
 * Hides the popup.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.hide = function(){};

/**
 * Sets whether opening and closing the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate opening and closing.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Enable or disable the autoHide feature.

 <p>When enabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> will be automatically hidden when the user clicks
 outside of it.
 *
 * @param {Boolean} enabled - whether auto-hiding should be enabled.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setAutoHideEnabled = function(enabled){};

/**
 * Enable or disable a "glass" pane.

 <p>When enabled, the background will be blocked with a semi-transparent pane the next time it
 is shown. If the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> is already visible, the glass will not be displayed
 until it is hidden and shown again.
 *
 * @param {Boolean} enabled - whether the glass panel should be enabled.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setGlassEnabled = function(enabled){};

/**
 * Set the style name of the glass panel.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setGlassStyleName = function(styleName){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> is in "modal" mode.

 <p>When the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> is modal, keyboard or mouse events that do not target the
 PopupPanel or its children will be ignored.
 *
 * @param {Boolean} modal - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> should be modal.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setModal = function(modal){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the popup's position relative to the browser's client area.

 <p>The popup's position may be set before calling show().
 *
 * @param {number} left - the popup's left, in pixels.
 * @param {number} top - the popup's top, in pixels.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setPopupPosition = function(left, top){};

/**
 * Set the popup position.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} a - 
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setPopupPositionAndShow = function(a){};

/**
 * When enabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> will preview all native events, even if another popup
 was opened after this one.

 <p>What this practically means is that if autoHide is enabled, enabling this feature will cause
 the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> to autoHide even if another non-modal popup was shown after it. If
 this feature is disabled, the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> will only autoHide if it was the last
 popup opened.
 *
 * @param {Boolean} previewing - whether to preview all native events.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setPreviewingAllNativeEvents = function(previewing){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.setWidth = function(width){};

/**
 * Shows the popup.
 *
 * @return {UiApp.PopupPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code> itself, useful for chaining.
 */
UiApp.PopupPanel.prototype.show = function(){};

/** @constructor */
UiApp.PushButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.PushButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.PushButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.PushButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.PushButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code> itself, useful for chaining.
 */
UiApp.PushButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.RadioButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.RadioButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.RadioButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.RadioButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setFocus = function(focus){};

/**
 * Set the value property on the input element that backs this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>. This is the
 value that will be associated with the CheckBox's name and submitted to the server if a
 FormPanel that holds it is submitted and the box is checked.
 *
 * @param {String} formValue - the new form value.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setFormValue = function(formValue){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>. The specified height may not take effect
 unless the element's CSS <code>display</code> property is set to <code>inline-block</code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> in pixels. The specified size many not take
 effect unless the element's CSS <code>display property</code> is set to <code>inline-block</code>.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>. The specified size many not take effect unless
 the element's CSS <code>display property</code> is set to <code>inline-block</code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setTitle = function(title){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> should be checked. Does not fire any events if the value
 changes as a result of this call.
 *
 * @param {Boolean} value - the new checked/unchecked state.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>. The specified width may not take effect unless
 the element's CSS <code>display</code> property is set to <code>inline-block</code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.RadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.RadioButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.ResetButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ResetButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ResetButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ResetButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ResetButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code> itself, useful for chaining.
 */
UiApp.ResetButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.ScrollPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.add = function(widget){};

/**
 * Add a handler for scroll events.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var label = app.createLabel(&quot;some label&quot;).setHeight(&quot;500px&quot;);
   var scroll = app.createScrollPanel(label).setHeight(&quot;200px&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   scroll.addScrollHandler(handler);
   app.add(scroll);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;scroll&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.addScrollHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ScrollPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ScrollPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ScrollPanel.prototype.getType = function(){};

/**
 * Sets whether to always show scrollbars even if they are not needed.
 *
 * @param {Boolean} alwaysShow - whether to always show scrollbars
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setAlwaysShowScrollBars = function(alwaysShow){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setHeight = function(height){};

/**
 * Sets the horizontal scroll position of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {number} position - the new horizontal scroll position, in pixels.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setHorizontalScrollPosition = function(position){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the vertical scroll position of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {number} position - the new vertical scroll position, in pixels.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setScrollPosition = function(position){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ScrollPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code> itself, useful for chaining.
 */
UiApp.ScrollPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.ServerHandler = function(){};

/**
 * Adds a widget to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> as a "callback element."

 <p>When a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> is called, any widgets added here, as well as any current
 child widgets of those widgets, are considered as callback elements. The value of each of these
 widgets is added to the information sent to the script processing the event, as long as the
 following two conditions are met:

 <ul>
   <li>The callback element has a "setName" method.
   <li>A name has been set.
 </ul>

 Note in particular that setName and setId are not the same thing.

 <p>Here is an example of how this can be used:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox1 = app.createTextBox().setName(&quot;textBox1&quot;);
   var textBox2 = app.createTextBox().setId(&quot;textBox2&quot;);
   app.add(textBox1);
   app.add(textBox2);
   var textBox3 = app.createTextBox().setName(&quot;textBox3&quot;);
   var panel = app.createFlowPanel();
   panel.add(textBox3);
   app.add(panel);
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   handler.addCallbackElement(textBox1)
       .addCallbackElement(textBox2)
       .addCallbackElement(panel)
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // There&#39;s a lot of information in &#39;parameter&#39; about the event too, but we&#39;ll focus here
   // only on the callback elements.
   var textBox1 = parameter.textBox1;  // the value of textBox1
   var textBox2 = parameter.textBox2;  // undefined! setId is not the same as setName
   var textBox3 = parameter.textBox3;  // works! the parent &quot;panel&quot; was a callback element
 }
 </code></pre>
 *
 * @param {UiApp.Widget} widget - the callback element.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.addCallbackElement = function(widget){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ServerHandler.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ServerHandler.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ServerHandler.prototype.getType = function(){};

/**
 * Sets the name of the function to call when this handler is invoked.
 *
 * @param {String} functionToInvoke - the name of the function to call.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.setCallbackFunction = function(functionToInvoke){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.setId = function(id){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.setTag = function(tag){};

/**
 * Sets this handler to fire only if the given widget's value is a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is between
 min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value matches this regular expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value is not a valid email address.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotEmail = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an integer.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotInteger = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is a string whose length is less
 than min or greater than max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {number} min - the minimum length. If null, no minimum is enforced.
 * @param {number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotLength = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widget's value does not match this regular
 expression.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String} pattern - the regex to test, as a string.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotMatches = function(widget, pattern){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as an number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is not one of the strings given in
 the options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of unacceptable values
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value cannot be interpreted as a number
 that is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are not numbers, or that
 do not sum up to the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNotSum = function(widgets, sum){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateNumber = function(widget){};

/**
 * Sets this handler to fire only if the given widget's value is one of the strings given in the
 options parameter.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {String[]} options - the list of acceptable values
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateOptions = function(widget, options){};

/**
 * Sets this handler to fire only if the given widget's value can be interpreted as a number and
 is between min and max.

 <p>This will cause an error if the widget does not have a text property.
 *
 * @param {UiApp.Widget} widget - the widget to validate on.
 * @param {Number} min - the minimum length. If null, no minimum is enforced.
 * @param {Number} max - the maximum length. If null, no maximum is enforced.
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateRange = function(widget, min, max){};

/**
 * Sets this handler to fire only if the given widgets have values that are numbers and sum up to
 the given value.

 <p>This will cause an error if any of the widgets do not have a text property.
 *
 * @param {UiApp.Widget[]} widgets - an array of the widgets to validate on.
 * @param {number} sum - the sum to validate with
 *
 * @return {UiApp.ServerHandler} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> itself, useful for chaining.
 */
UiApp.ServerHandler.prototype.validateSum = function(widgets, sum){};

/** @constructor */
UiApp.SimpleCheckBox = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SimpleCheckBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SimpleCheckBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SimpleCheckBox.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> should be checked.
 *
 * @param {Boolean} checked - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> should be checked.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setChecked = function(checked){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleCheckBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleCheckBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.SimplePanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SimplePanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SimplePanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SimplePanel.prototype.getType = function(){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setVisible = function(visible){};

/**
 * Sets the widget inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>, removing anything previously there.
 *
 * @param {UiApp.Widget} widget - the widget to put in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimplePanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code> itself, useful for chaining.
 */
UiApp.SimplePanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.SimpleRadioButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SimpleRadioButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SimpleRadioButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SimpleRadioButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> should be checked.
 *
 * @param {Boolean} checked - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> should be checked.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setChecked = function(checked){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SimpleRadioButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> itself, useful for chaining.
 */
UiApp.SimpleRadioButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.SplitLayoutPanel = function(){};

/**
 * Adds a widget at the center of the dock. No further widgets may be added after this one.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.add = function(widget){};

/**
 * Adds a widget to the east edge of the dock.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {Number} width - the width of the widget, in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addEast = function(widget, width){};

/**
 * Adds a widget to the north edge of the dock.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {Number} height - the height of the widget, in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addNorth = function(widget, height){};

/**
 * Adds a widget to the east edge of the dock.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {Number} height - the height of the widget, in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addSouth = function(widget, height){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addStyleName = function(styleName){};

/**
 * Adds a widget to the west edge of the dock.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {Number} width - the width of the widget, in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.addWest = function(widget, width){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SplitLayoutPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SplitLayoutPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SplitLayoutPanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.remove = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setVisible = function(visible){};

/**
 * Sets the minimum allowable size for the given widget.

 <p>The associated splitter cannot be dragged to a position that would make it smaller than this
 size. This method has no effect for the center widget. This will cause an error if the widget
 is not a child of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget whose minimum size is being set.
 * @param {number} minSize - the minimum size, in pixels.
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setWidgetMinSize = function(widget, minSize){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SplitLayoutPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code> itself, useful for chaining.
 */
UiApp.SplitLayoutPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.StackPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.add = function(widget){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.add = function(widget, text){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.StackPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.StackPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.StackPanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.remove = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setSize = function(width, height){};

/**
 * Sets the text associated with a child by its index.
 *
 * @param {number} index - the index of the stack element whose text we want to change.
 * @param {String} text - the new text.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setStackText = function(index, text){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.StackPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code> itself, useful for chaining.
 */
UiApp.StackPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.SubmitButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SubmitButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SubmitButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SubmitButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SubmitButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code> itself, useful for chaining.
 */
UiApp.SubmitButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.SuggestBox = function(){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.SuggestBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.SuggestBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.SuggestBox.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether opening and closing the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate opening and closing.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Sets the auto-select behavior.
 *
 * @param {Boolean} autoSelectEnabled - whether auto-select is enabled.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setAutoSelectEnabled = function(autoSelectEnabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the suggest limit
 *
 * @param {number} limit - max number of suggestions
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setLimit = function(limit){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets the popup style name.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setPopupStyleName = function(styleName){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setTitle = function(title){};

/**
 * Sets the value of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} value - the new value.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.SuggestBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code> itself, useful for chaining.
 */
UiApp.SuggestBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.TabBar = function(){};

/**
 * Add a handler that fires before the selection occurs.

 <p>This is deprecated in favor of addSelectionHandler, because there is no way to cancel the
 selection so they are functionally identical.
 *
 * @param {UiApp.Handler} handler - the handler to invoke.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addBeforeSelectionHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addStyleName = function(styleName){};

/**
 * Add a tab with the given title.
 *
 * @param {String} title - the new tab's title.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addTab = function(title){};

/**
 * Add a tab with the given title.
 *
 * @param {String} title - the new tab's title.
 * @param {Boolean} asHtml - whether to treat the title as HTML.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.addTab = function(title, asHtml){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.TabBar.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.TabBar.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.TabBar.prototype.getType = function(){};

/**
 * Select a tab by index.
 *
 * @param {number} index - the index of the tab to select.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.selectTab = function(index){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setStylePrimaryName = function(styleName){};

/**
 * Set whether the given tab is enabled.
 *
 * @param {number} index - the tab index.
 * @param {Boolean} enabled - whether the tab should be enabled.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setTabEnabled = function(index, enabled){};

/**
 * Set the header text of a given tab.
 *
 * @param {number} index - the index of the tab.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setTabText = function(index, text){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> should be visible or not.
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabBar} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code> itself, useful for chaining.
 */
UiApp.TabBar.prototype.setWidth = function(width){};

/** @constructor */
UiApp.TabPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.add = function(widget){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.add = function(widget, text){};

/**
 * Adds a widget to the stack with the given header text.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 * @param {String} text - the new header text.
 * @param {Boolean} asHtml - whether to treat the text as HTML.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.add = function(widget, text, asHtml){};

/**
 * Add a handler that fires before the selection occurs.

 <p>This is deprecated in favor of addSelectionHandler, because there is no way to cancel the
 selection so they are functionally identical.
 *
 * @param {UiApp.Handler} handler - the handler to invoke.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.addBeforeSelectionHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.TabPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.TabPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.TabPanel.prototype.getType = function(){};

/**
 * Select a tab by index.
 *
 * @param {number} index - the index of the tab to select.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.selectTab = function(index){};

/**
 * Sets whether changing tabs <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate changing tabs.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TabPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code> itself, useful for chaining.
 */
UiApp.TabPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.TextArea = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;change&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addChangeHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.TextArea.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.TextArea.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.TextArea.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setAccessKey = function(accessKey){};

/**
 * Sets the requested width of the text box.

 <p>This is not an exact value, as not all characters are created equal.
 *
 * @param {number} width - the width, in characters.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setCharacterWidth = function(width){};

/**
 * Sets the cursor position inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the new cursor position, in characters from the start.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setCursorPos = function(position){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setDirection = function(direction){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> should have the current focus.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setLayoutData = function(layout){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setPixelSize = function(width, height){};

/**
 * Sets whether the text in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> is read only and can't be edited.
 *
 * @param {Boolean} readOnly - whether the text is read only.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setReadOnly = function(readOnly){};

/**
 * Sets the range of text to be selected.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the position of the first character to be selected
 * @param {number} length - the number of characters to be selected
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setSelectionRange = function(position, length){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setText = function(text){};

/**
 * Sets the text alignment of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} textAlign - the alignment
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setTextAlignment = function(textAlign){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setTitle = function(title){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>'s value without firing any events.
 *
 * @param {String} value - the new value.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> should be visible or not.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setVisible = function(visible){};

/**
 * Sets the number of text lines that are visible.
 *
 * @param {number} lines - the number of visible lines.
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setVisibleLines = function(lines){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextArea} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code> itself, useful for chaining.
 */
UiApp.TextArea.prototype.setWidth = function(width){};

/** @constructor */
UiApp.TextBox = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;change&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addChangeHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addStyleName = function(styleName){};

/**
 * Add a handler for value change events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var textBox = app.createTextBox();
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   textBox.addValueChangeHandler(handler);
   app.add(textBox);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;valueChange&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.addValueChangeHandler = function(handler){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.TextBox.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.TextBox.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.TextBox.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setAccessKey = function(accessKey){};

/**
 * Sets the cursor position inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the new cursor position, in characters from the start.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setCursorPos = function(position){};

/**
 * Set the text direction.
 *
 * @param {UiApp.Component} direction - the text direction
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setDirection = function(direction){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> should have the current focus.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setLayoutData = function(layout){};

/**
 * Sets the maximum allowable length of the text box's contents.
 *
 * @param {number} length - the maximum length.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setMaxLength = function(length){};

/**
 * Sets the name of the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>, which is how it will be referred to when used in a
 FormPanel or as a callback element on an event handler.
 *
 * @param {String} name - the new name.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setName = function(name){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setPixelSize = function(width, height){};

/**
 * Sets whether the text in this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> is read only and can't be edited.
 *
 * @param {Boolean} readOnly - whether the text is read only.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setReadOnly = function(readOnly){};

/**
 * Sets the range of text to be selected.

 <p>This will only work when the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> is attached to the document and not
 hidden.
 *
 * @param {number} position - the position of the first character to be selected
 * @param {number} length - the number of characters to be selected
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setSelectionRange = function(position, length){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setText = function(text){};

/**
 * Sets the text alignment of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {UiApp.Component} textAlign - the alignment
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setTextAlignment = function(textAlign){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setTitle = function(title){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>'s value without firing any events.
 *
 * @param {String} value - the new value.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setValue = function(value){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> should be visible or not.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setVisible = function(visible){};

/**
 * Sets the number of visible characters in the text box.

 <p>This is not an exact value, as not all characters are created equal.
 *
 * @param {number} length - the length, in characters.
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setVisibleLength = function(length){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TextBox} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code> itself, useful for chaining.
 */
UiApp.TextBox.prototype.setWidth = function(width){};

/** @constructor */
UiApp.ToggleButton = function(){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for click events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addClickHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;click&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addClickHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addFocusHandler = function(handler){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addMouseWheelHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.addStyleName = function(styleName){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.ToggleButton.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.ToggleButton.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.ToggleButton.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether the button is down.
 *
 * @param {Boolean} down - whether the button is down.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setDown = function(down){};

/**
 * Sets whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> is enabled.
 *
 * @param {Boolean} enabled - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> should be enabled or disabled.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setEnabled = function(enabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> should have the current focus.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setFocus = function(focus){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> should be visible or not.
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.ToggleButton} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code> itself, useful for chaining.
 */
UiApp.ToggleButton.prototype.setWidth = function(width){};

/** @constructor */
UiApp.Tree = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.add = function(widget){};

/**
 * Add a handler for blur events (losing keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addBlurHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;blur&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addBlurHandler = function(handler){};

/**
 * Add a handler for close events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addCloseHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addCloseHandler = function(handler){};

/**
 * Add a handler for focus events (gaining keyboard focus).

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addFocusHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;focus&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addFocusHandler = function(handler){};

/**
 * Adds a new child tree item containing the specified HTML.
 *
 * @param {String} text - the new item's text, treated as HTML.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addItem = function(text){};

/**
 * Adds a TreeItem as a child to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {TreeItem} item - the child item.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addItem = function(item){};

/**
 * Add a handler for key down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keydown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addKeyDownHandler = function(handler){};

/**
 * Add a handler for key press events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyPressHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keypress&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addKeyPressHandler = function(handler){};

/**
 * Add a handler for key up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addKeyUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;keyup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // what key was pressed. See below for a link explaining what these values mean.
   var charCode = parameter.charCode;
   var keyCode = parameter.keyCode;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.

 <p>For an explanation of charCode and keyCode, including what to expect on different browsers,
 look <a href="http://www.quirksmode.org/js/keys.html">here</a>.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addKeyUpHandler = function(handler){};

/**
 * Add a handler for mouse down events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseDownHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousedown&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseDownHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseMoveHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousemove&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseMoveHandler = function(handler){};

/**
 * Add a handler for mouse out events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOutHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseout&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseOutHandler = function(handler){};

/**
 * Add a handler for mouse move events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseOverHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousover&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseOverHandler = function(handler){};

/**
 * Add a handler for mouse up events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseUpHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mouseup&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseUpHandler = function(handler){};

/**
 * Add a handler for mouse wheel events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var button = app.createButton(&quot;a button&quot;);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   button.addMouseWheelHandler(handler);
   app.add(button);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;mousewheel&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
   // mouse x and y position relative to the widget that fired the event.
   var x = parameter.x;
   var y = parameter.y;
   // mouse x and y position within the browser window&#39;s client area.
   var clientX = parameter.clientX;
   var clientY = parameter.clientY;
   // mouse x and y position within the user&#39;s display.
   var screenX = parameter.screenX;
   var screenY = parameter.screenY;
   // the mouse button used. Left is 1, right is 2, and middle is 4.
   var button = parameter.button;
   // whether the various modifier keys were also pressed (true or false)
   var shift = parameter.shift;
   var alt = parameter.alt;
   var ctrl = parameter.ctrl;
   var meta = parameter.meta;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well, as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addMouseWheelHandler = function(handler){};

/**
 * Add a handler for open events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addOpenHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;close&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addOpenHandler = function(handler){};

/**
 * Add a handler for selection events.

 <p>Note that you can have multiple handlers for the same event on the same widget. They will be
 called in the order that they were added to the widget, although <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>s may appear to happen
 simultaneously.

 <p>The handler passes back some information to the server about what happened. This information
 can be accessed as follows:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();
   var item1 = app.createTreeItem(&quot;item1&quot;);
   item1.addItem(app.createTreeItem(&quot;item2&quot;));
   var tree = app.createTree();
   tree.addItem(item1);
   var handler = app.createServerHandler(&quot;handlerFunction&quot;);
   tree.addSelectionHandler(handler)
   app.add(tree);
   return app;
 }

 function handlerFunction(eventInfo) {
   var parameter = eventInfo.parameter;
   // the type of event, in this case &quot;selection&quot;.
   var eventType = parameter.eventType;
   // the id of the widget that fired this event.
   var source = parameter.source;
 }
 </code></pre>

 In addition, the values of certain widgets can be sent up with the event as well as "callback
 elements." See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> for more information.
 *
 * @param {UiApp.Handler} handler - the handler to execute when the event occurs. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addSelectionHandler = function(handler){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.addStyleName = function(styleName){};

/**
 * Removes all children.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Tree.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.Tree.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Tree.prototype.getType = function(){};

/**
 * Sets the widget's 'access key'. This key is used (in conjunction with a browser-specific
 modifier key) to automatically focus the widget.
 *
 * @param {Char} accessKey - the character to use for focus
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setAccessKey = function(accessKey){};

/**
 * Sets whether opening and closing the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> is animated.
 *
 * @param {Boolean} animationEnabled - whether to animate opening and closing.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setAnimationEnabled = function(animationEnabled){};

/**
 * Explicitly focus/unfocus this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>Only one widget can have focus at a time, and the widget that does will receive all keyboard
 events.
 *
 * @param {Boolean} focus - whether the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> should have the current focus.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setFocus = function(focus){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setPixelSize = function(width, height){};

/**
 * Selects the given item.

 <p>This does not fire any events.
 *
 * @param {TreeItem} item - the item to select.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setSelectedItem = function(item){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setSize = function(width, height){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>'s position in the tab index.

 <p>If more than one widget has the same tab index, each such widget will receive focus in an
 arbitrary order. Setting the tab index to -1 will cause this widget to be removed from the tab
 order.
 *
 * @param {number} index - the new tab index.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setTabIndex = function(index){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setTitle = function(title){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> should be visible or not.
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.Tree} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code> itself, useful for chaining.
 */
UiApp.Tree.prototype.setWidth = function(width){};

/** @constructor */
UiApp.TreeItem = function(){};

/**
 * Adds a new child tree item containing the specified HTML.
 *
 * @param {String} text - the new item's text, treated as HTML.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.addItem = function(text){};

/**
 * Adds a TreeItem as a child to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {TreeItem} item - the child item.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.addItem = function(item){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.addStyleName = function(styleName){};

/**
 * Removes all children.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.TreeItem.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.TreeItem.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.TreeItem.prototype.getType = function(){};

/**
 * Sets the HTML content of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} html - the new HTML
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setHTML = function(html){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setHeight = function(height){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setId = function(id){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setPixelSize = function(width, height){};

/**
 * Set whether this item is selected.
 *
 * @param {Boolean} selected - whether this item is selected.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setSelected = function(selected){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setSize = function(width, height){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> is open or closed.

 <p>This does not fire events if the state changes.
 *
 * @param {Boolean} open - whether it's open or closed.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setState = function(open){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setTag = function(tag){};

/**
 * Set the display text of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} text - the new text.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setText = function(text){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setTitle = function(title){};

/**
 * A deprecated function that has no effect.
 *
 * @param {Object} a - 
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setUserObject = function(a){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> should be visible or not.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setVisible = function(visible){};

/**
 * Sets the widget to be shown inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to put inside this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setWidget = function(widget){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.TreeItem} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> itself, useful for chaining.
 */
UiApp.TreeItem.prototype.setWidth = function(width){};

/** @constructor */
UiApp.UiInstance = function(){};

/**
 * Adds a new widget to this application.

 <p>The new widget will be a part of the children widgets of this application. The new widget is
 added to the end of the list of widgets currently in the application.
 *
 * @param {UiApp.Widget} child - the new widget to add to the application.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.add = function(child){};

/**
 * Close the app.

 <p>This will only work if the app is being shown as a dialog, such as in a Google Spreadsheet.
 It will have no effect when called on an app that is published as a standalone service.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.close = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/absolute-panel.html'>AbsolutePanel</a></s></code>.
 *
 * @return {UiApp.AbsolutePanel} the new AbsolutePanel.
 */
UiApp.UiInstance.prototype.createAbsolutePanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/anchor.html'>Anchor</a></s></code>.

 <p>This is essentially a hyperlink and represents an <code>&lt;a&gt;</code> element. This widget is based
 on GWT's anchor class.
 *
 * @param {String} text - the text to display to the user as the anchor's text.
 * @param {Boolean} asHtml - whether to render that text as HTML.
 * @param {String} href - the address to go to when the anchor is clicked.
 *
 * @return {UiApp.Anchor} the new Anchor.
 */
UiApp.UiInstance.prototype.createAnchor = function(text, asHtml, href){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @return {UiApp.Button} the new Button.
 */
UiApp.UiInstance.prototype.createButton = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/button.html'>Button</a></s></code>.
 *
 * @param {String} html - the new Button's text, rendered as HTML.
 *
 * @return {UiApp.Button} the new Button.
 */
UiApp.UiInstance.prototype.createButton = function(html){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @return {UiApp.CaptionPanel} the new CaptionPanel.
 */
UiApp.UiInstance.prototype.createCaptionPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/caption-panel.html'>CaptionPanel</a></s></code>.
 *
 * @param {String} caption - the CaptionPanel's caption text, not rendered as HTML.
 *
 * @return {UiApp.CaptionPanel} the new CaptionPanel.
 */
UiApp.UiInstance.prototype.createCaptionPanel = function(caption){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @return {UiApp.CheckBox} the new CheckBox.
 */
UiApp.UiInstance.prototype.createCheckBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/check-box.html'>CheckBox</a></s></code>.
 *
 * @param {String} label - the CheckBox's label text, not rendered as HTML.
 *
 * @return {UiApp.CheckBox} the new CheckBox.
 */
UiApp.UiInstance.prototype.createCheckBox = function(label){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code>.

 <p>A ClientHandler can be used anywhere a ServerHandler can be. See the documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> and the User Guide to understand how to specify what a ClientHandler will do in
 response to an event.
 *
 * @return {UiApp.ClientHandler} the new ClientHandler.
 */
UiApp.UiInstance.prototype.createClientHandler = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-box.html'>DateBox</a></s></code>.
 *
 * @return {UiApp.DateBox} the new DateBox.
 */
UiApp.UiInstance.prototype.createDateBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/date-picker.html'>DatePicker</a></s></code>.
 *
 * @return {UiApp.DatePicker} the new DatePicker.
 */
UiApp.UiInstance.prototype.createDatePicker = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-stack-panel.html'>DecoratedStackPanel</a></s></code>.
 *
 * @return {UiApp.DecoratedStackPanel} the new DecoratedStackPanel.
 */
UiApp.UiInstance.prototype.createDecoratedStackPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-bar.html'>DecoratedTabBar</a></s></code>.
 *
 * @return {UiApp.DecoratedTabBar} the new DecoratedTabBar.
 */
UiApp.UiInstance.prototype.createDecoratedTabBar = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorated-tab-panel.html'>DecoratedTabPanel</a></s></code>.
 *
 * @return {UiApp.DecoratedTabPanel} the new DecoratedTabPanel.
 */
UiApp.UiInstance.prototype.createDecoratedTabPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/decorator-panel.html'>DecoratorPanel</a></s></code>.
 *
 * @return {UiApp.DecoratorPanel} the new DecoratorPanel.
 */
UiApp.UiInstance.prototype.createDecoratorPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>The dialog will not auto-hide and is not modal.
 *
 * @return {UiApp.DialogBox} the new DialogBox.
 */
UiApp.UiInstance.prototype.createDialogBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/dialog-box.html'>DialogBox</a></s></code>.

 <p>The dialog is not modal.
 *
 * @param {Boolean} autoHide - whether the dialog should auto-hide when the user clicks outside of it.
 *
 * @return {UiApp.DialogBox} the new DialogBox.
 */
UiApp.UiInstance.prototype.createDialogBox = function(autoHide){};

/**
 * Create a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/docs-list-dialog.html'>DocsListDialog</a></s></code>.
 *
 * @return {UiApp.DocsListDialog} the new DocsListDialog.
 */
UiApp.UiInstance.prototype.createDocsListDialog = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/file-upload.html'>FileUpload</a></s></code>.
 *
 * @return {UiApp.FileUpload} the new FileUpload.
 */
UiApp.UiInstance.prototype.createFileUpload = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flex-table.html'>FlexTable</a></s></code>.
 *
 * @return {UiApp.FlexTable} the new FlexTable.
 */
UiApp.UiInstance.prototype.createFlexTable = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/flow-panel.html'>FlowPanel</a></s></code>.
 *
 * @return {UiApp.FlowPanel} the new FlowPanel.
 */
UiApp.UiInstance.prototype.createFlowPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/focus-panel.html'>FocusPanel</a></s></code>.
 *
 * @return {UiApp.FocusPanel} the new FocusPanel.
 */
UiApp.UiInstance.prototype.createFocusPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/form-panel.html'>FormPanel</a></s></code>.
 *
 * @return {UiApp.FormPanel} the new FormPanel.
 */
UiApp.UiInstance.prototype.createFormPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/grid.html'>Grid</a></s></code>.

 <p>Until the Grid is explicitly resized, no widgets can't be added to it.
 *
 * @return {UiApp.Grid} the new Grid.
 */
UiApp.UiInstance.prototype.createGrid = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> with no text.
 *
 * @return {UiApp.HTML} the new HTML.
 */
UiApp.UiInstance.prototype.createHTML = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/html.html'>HTML</a></s></code> with the specified text.
 *
 * @param {String} html - the HTML's text, rendered as HTML.
 *
 * @return {UiApp.HTML} the new HTML.
 */
UiApp.UiInstance.prototype.createHTML = function(html){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code>.
 *
 * @return {UiApp.Hidden} the new Hidden.
 */
UiApp.UiInstance.prototype.createHidden = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/hidden.html'>Hidden</a></s></code> with a specified name.
 *
 * @param {String} name - the hidden field's name.
 *
 * @return {UiApp.Hidden} the new Hidden.
 */
UiApp.UiInstance.prototype.createHidden = function(name){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/horizontal-panel.html'>HorizontalPanel</a></s></code>.
 *
 * @return {UiApp.HorizontalPanel} the new HorizontalPanel.
 */
UiApp.UiInstance.prototype.createHorizontalPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code>.
 *
 * @return {UiApp.Image} the new Image.
 */
UiApp.UiInstance.prototype.createImage = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/image.html'>Image</a></s></code> with the specified URL.
 *
 * @param {String} url - the URL of the image.
 *
 * @return {UiApp.Image} the new Image.
 */
UiApp.UiInstance.prototype.createImage = function(url){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/inline-label.html'>InlineLabel</a></s></code> with no text.
 *
 * @return {UiApp.InlineLabel} the new InlineLabel.
 */
UiApp.UiInstance.prototype.createInlineLabel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> with no text.
 *
 * @return {UiApp.Label} the new Label.
 */
UiApp.UiInstance.prototype.createLabel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/label.html'>Label</a></s></code> with the specified text.
 *
 * @param {String} text - the label's text, not rendered as HTML.
 *
 * @return {UiApp.Label} the new Label.
 */
UiApp.UiInstance.prototype.createLabel = function(text){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/list-box.html'>ListBox</a></s></code>.

 <p>The ListBox will not allow multiple selections.
 *
 * @return {UiApp.ListBox} the new ListBox.
 */
UiApp.UiInstance.prototype.createListBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-bar.html'>MenuBar</a></s></code>.

 <p>The MenuBar will display itself horizontally.
 *
 * @return {UiApp.MenuBar} the new MenuBar.
 */
UiApp.UiInstance.prototype.createMenuBar = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item.html'>MenuItem</a></s></code>.
 *
 * @param {String} text - the text to display for this item.
 * @param {Boolean} asHtml - whether to render that text as HTML.
 * @param {UiApp.Handler} command - the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code> to invoke when this item is
     selected.
 *
 * @return {UiApp.MenuItem} the new MenuItem.
 */
UiApp.UiInstance.prototype.createMenuItem = function(text, asHtml, command){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/menu-item-separator.html'>MenuItemSeparator</a></s></code>.
 *
 * @return {UiApp.MenuItemSeparator} the new MenuItemSeparator.
 */
UiApp.UiInstance.prototype.createMenuItemSeparator = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/password-text-box.html'>PasswordTextBox</a></s></code>.
 *
 * @return {UiApp.PasswordTextBox} the new PasswordTextBox.
 */
UiApp.UiInstance.prototype.createPasswordTextBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>The panel will not auto-hide and is not modal.
 *
 * @return {UiApp.PopupPanel} the new PopupPanel.
 */
UiApp.UiInstance.prototype.createPopupPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/popup-panel.html'>PopupPanel</a></s></code>.

 <p>The panel is not modal.
 *
 * @param {Boolean} autoHide - whether the panel should auto-hide when the user clicks outside of it.
 *
 * @return {UiApp.PopupPanel} the new PopupPanel.
 */
UiApp.UiInstance.prototype.createPopupPanel = function(autoHide){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @return {UiApp.PushButton} the new PushButton.
 */
UiApp.UiInstance.prototype.createPushButton = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} upText - the up text
 *
 * @return {UiApp.PushButton} the new PushButton.
 */
UiApp.UiInstance.prototype.createPushButton = function(upText){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} upText - the up text
 * @param {String} downText - the down text.
 *
 * @return {UiApp.PushButton} the new PushButton.
 */
UiApp.UiInstance.prototype.createPushButton = function(upText, downText){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/push-button.html'>PushButton</a></s></code>.
 *
 * @param {String} upText - the up text
 * @param {String} downText - the down text.
 * @param {UiApp.Handler} clickHandler - a click handler for the new button. This can be a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/client-handler.html'>ClientHandler</a></s></code> or
     a <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.PushButton} the new PushButton.
 */
UiApp.UiInstance.prototype.createPushButton = function(upText, downText, clickHandler){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} name - the RadioButton's name. Names are used for grouping RadioButtons; see the
     documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> for more details.
 *
 * @return {UiApp.RadioButton} the new RadioButton.
 */
UiApp.UiInstance.prototype.createRadioButton = function(name){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code>.
 *
 * @param {String} name - the RadioButton's name. Names are used for grouping RadioButtons; see the
     documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/radio-button.html'>RadioButton</a></s></code> for more details.
 * @param {String} label - the RadioButton's label text, not rendered as HTML.
 *
 * @return {UiApp.RadioButton} the new RadioButton.
 */
UiApp.UiInstance.prototype.createRadioButton = function(name, label){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @return {UiApp.ResetButton} the new ResetButton.
 */
UiApp.UiInstance.prototype.createResetButton = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/reset-button.html'>ResetButton</a></s></code>.
 *
 * @param {String} html - the text to show on the button, rendered as HTML.
 *
 * @return {UiApp.ResetButton} the new ResetButton.
 */
UiApp.UiInstance.prototype.createResetButton = function(html){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/scroll-panel.html'>ScrollPanel</a></s></code>.
 *
 * @return {UiApp.ScrollPanel} the new ScrollPanel.
 */
UiApp.UiInstance.prototype.createScrollPanel = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerBlurHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerChangeHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerClickHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerCloseHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerCommand = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerErrorHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerFocusHandler = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.

 <p>Server handlers are used by scripts to launch script functions in response to events in the
 application. For example, a server handler can be added to a <code>Button</code> with the <code>addClickHandler</code> method so that the handler will be invoked when the button is clicked.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerInitializeHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerKeyHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerLoadHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerMouseHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerScrollHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerSelectionHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerSubmitHandler = function(){};

/**
 * Deprecated in favor of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/server-handler.html'>ServerHandler</a></s></code>.
 *
 * @return {UiApp.ServerHandler} a new ServerHandler object.
 */
UiApp.UiInstance.prototype.createServerValueChangeHandler = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-check-box.html'>SimpleCheckBox</a></s></code>.
 *
 * @return {UiApp.SimpleCheckBox} the new SimpleCheckBox.
 */
UiApp.UiInstance.prototype.createSimpleCheckBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-panel.html'>SimplePanel</a></s></code>.
 *
 * @return {UiApp.SimplePanel} the new SimplePanel.
 */
UiApp.UiInstance.prototype.createSimplePanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code>.
 *
 * @param {String} name - the SimpleRadioButton's name. Names are used for grouping RadioButtons; see the
     documentation of <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/simple-radio-button.html'>SimpleRadioButton</a></s></code> for more details.
 *
 * @return {UiApp.SimpleRadioButton} the new SimpleRadioButton.
 */
UiApp.UiInstance.prototype.createSimpleRadioButton = function(name){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/split-layout-panel.html'>SplitLayoutPanel</a></s></code>.
 *
 * @return {UiApp.SplitLayoutPanel} the new SplitLayoutPanel.
 */
UiApp.UiInstance.prototype.createSplitLayoutPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/stack-panel.html'>StackPanel</a></s></code>.
 *
 * @return {UiApp.StackPanel} the new StackPanel.
 */
UiApp.UiInstance.prototype.createStackPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/submit-button.html'>SubmitButton</a></s></code>.
 *
 * @return {UiApp.SubmitButton} the new SubmitButton.
 */
UiApp.UiInstance.prototype.createSubmitButton = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/suggest-box.html'>SuggestBox</a></s></code>.
 *
 * @return {UiApp.SuggestBox} the new SuggestBox.
 */
UiApp.UiInstance.prototype.createSuggestBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-bar.html'>TabBar</a></s></code>.
 *
 * @return {UiApp.TabBar} the new TabBar.
 */
UiApp.UiInstance.prototype.createTabBar = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tab-panel.html'>TabPanel</a></s></code>.
 *
 * @return {UiApp.TabPanel} the new TabPanel.
 */
UiApp.UiInstance.prototype.createTabPanel = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-area.html'>TextArea</a></s></code>.
 *
 * @return {UiApp.TextArea} the new TextArea.
 */
UiApp.UiInstance.prototype.createTextArea = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/text-box.html'>TextBox</a></s></code>.
 *
 * @return {UiApp.TextBox} the new TextBox.
 */
UiApp.UiInstance.prototype.createTextBox = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @return {UiApp.ToggleButton} the new ToggleButton.
 */
UiApp.UiInstance.prototype.createToggleButton = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} upText - the up text
 *
 * @return {UiApp.ToggleButton} the new ToggleButton.
 */
UiApp.UiInstance.prototype.createToggleButton = function(upText){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/toggle-button.html'>ToggleButton</a></s></code>.
 *
 * @param {String} upText - the up text
 * @param {String} downText - the down text.
 *
 * @return {UiApp.ToggleButton} the new ToggleButton.
 */
UiApp.UiInstance.prototype.createToggleButton = function(upText, downText){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree.html'>Tree</a></s></code>.
 *
 * @return {UiApp.Tree} the new Tree.
 */
UiApp.UiInstance.prototype.createTree = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code>.
 *
 * @return {UiApp.TreeItem} the new TreeItem.
 */
UiApp.UiInstance.prototype.createTreeItem = function(){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/tree-item.html'>TreeItem</a></s></code> with the given text.
 *
 * @param {String} text - the tree item's text, not rendered as HTML.
 *
 * @return {UiApp.TreeItem} the new TreeItem.
 */
UiApp.UiInstance.prototype.createTreeItem = function(text){};

/**
 * Creates a new <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @return {UiApp.VerticalPanel} the new VerticalPanel.
 */
UiApp.UiInstance.prototype.createVerticalPanel = function(){};

/**
 * Retrieves a generic reference to an element stored in the application, by its id.

 <p>The reference is not 'aware' of whether any such widget actually exists. If there is no
 widget with the given id, or if there is such a widget but the method you call on it does not
 exist for that widget type, this will cause an error on the client when the UiInstance is
 returned.

 <p>This can be used to get existing widgets in the application when writing event handling
 code. To set a widget's id, use the method <code>setId</code> of the target widget. For Example:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();

   // create a label and set its id to &#39;labelId&#39;
   var label = app.createLabel(&quot;Hello&quot;).setId(&#39;labelId&#39;);

   var button = app.createButton(&quot;OK&quot;, app.createServerHandler(&#39;onClick&#39;));
   app.add(label).add(button);
   return app;
 }

 function onClick(event) {
   var app = UiApp.getActiveApplication();

   // retrieve the label from the application by id
   var label = app.getElementById(&#39;labelId&#39;);
   label.setText(&quot;World!&quot;);
   return app;
 }
 </code></pre>
 *
 * @param {String} id - the id of the requested widget.
 *
 * @return {UiApp.Component} a reference to a widget with that id
 */
UiApp.UiInstance.prototype.getElementById = function(id){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.UiInstance.prototype.getId = function(){};

/**
 * Gets whether the UiApp displays in HTML 'standards' mode or in 'quirks' mode.
 *
 * @return {Boolean} whether the UiApp displays in HTML 'standards' mode or in 'quirks' mode
 */
UiApp.UiInstance.prototype.isStandardsMode = function(){};

/**
 * Load a GUI Builder component into UiApp, by name.
 *
 * @param {String} componentName - the name of the component to load
 *
 * @return {UiApp.Component} the component, which can be added to an app
 */
UiApp.UiInstance.prototype.loadComponent = function(componentName){};

/**
 * Remove the widget with the given index from the application. Indexes begin from 0. This will
 fail if the index is greater than or equal to the number of elements in the application.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.remove = function(index){};

/**
 * Sets the application's height.

 <p>This affects the height of the application when run as a service or the height of a dialog
 when an application is shown inside a spreadsheet.
 *
 * @param {number} height - the new height value in pixels.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.setHeight = function(height){};

/**
 * Set whether the UiApp displays in HTML 'standards' mode or in 'quirks' mode.

 <p>By default UiApp uses 'quirks' mode unless you use a GUI Builder component with
 loadComponent, in which case it defaults to 'standards'.
 *
 * @param {Boolean} standardsMode - whether to use standards mode
 *
 * @return {UiApp.UiInstance} this UiInstance, useful for chaining
 */
UiApp.UiInstance.prototype.setStandardsMode = function(standardsMode){};

/**
 * Sets one of the application's style attributes to a new value.

 <p>Possible attributes are the same as those available in CSS style sheets. Since some CSS code
 may be malicious, attributes are whitelisted explicitly and therefore some CSS attributes may
 not be available.

 <p>The following example shows an application which background and text color is changed:

 <pre class="prettyprint"><code>
 function doGet() {
   var app = UiApp.createApplication();

   // Change the app&#39;s background to black and
   // text color to green
   app.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);

   // create a label
   var label = app.createLabel(&quot;Hello World!&quot;);

   app.add(label)
   return app;
 }
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camelCase. ("fontSize", not "font-size").
 * @param {String} value - the CSS value
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets the title of the application.

 <p>If this application will be run as a service, this will be used as the title of the page. If
 this application will be run as a dialog (for example inside a spreadsheet) it will be the
 title of the dialog's window.
 *
 * @param {String} title - the string to be used as the application's title.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.setTitle = function(title){};

/**
 * Sets the application's width.

 <p>This affects the width of the application when run as a service or the width of a dialog
 when an application is shown inside a spreadsheet.
 *
 * @param {number} width - the new width value in pixels.
 *
 * @return {UiApp.UiInstance} the application itself, useful for chaining.
 */
UiApp.UiInstance.prototype.setWidth = function(width){};

/** @constructor */
UiApp.VerticalPanel = function(){};

/**
 * Add a widget to the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {UiApp.Widget} widget - the widget to add.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.add = function(widget){};

/**
 * Sets the dependent style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.addStyleDependentName = function(styleName){};

/**
 * Adds a style name to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.addStyleName = function(styleName){};

/**
 * Remove all widgets from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.clear = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.VerticalPanel.prototype.getId = function(){};

/**
 * Gets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @return {String} the text tag.
 */
UiApp.VerticalPanel.prototype.getTag = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.VerticalPanel.prototype.getType = function(){};

/**
 * Remove the widget with the given index from the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>. Indexes begin from 0.
 This will fail if the index is greater than or equal to the number of elements in the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {number} index - the index of the widget to remove.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.remove = function(index){};

/**
 * Sets the width of the border to be applied to all cells in this panel.

 <p>This is particularly useful when debugging layouts, in that it allows you to see explicitly
 the cells that contain this panel's children.
 *
 * @param {number} width - the new border width, in pixels.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setBorderWidth = function(width){};

/**
 * Sets the height of the cell associated with the given widget, related to the panel as a whole.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to use in identifying the cell.
 * @param {String} height - the height in any valid CSS unit, such as "10px" or "15cm".
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setCellHeight = function(widget, height){};

/**
 * Sets the horizontal alignment of the given widget within its cell.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to align.
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setCellHorizontalAlignment = function(widget, horizontalAlignment){};

/**
 * Sets the vertical alignment of the given widget within its cell.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to align.
 * @param {UiApp.VerticalAlignment} verticalAlignment - the desired alignment, such as UiApp.VerticalAlignment.MIDDLE.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setCellVerticalAlignment = function(widget, verticalAlignment){};

/**
 * Sets the width of the cell associated with the given widget, related to the panel as a whole.

 <p>This will cause an error if used with a widget that is not currently a child of the panel.
 *
 * @param {UiApp.Widget} widget - the widget to use in identifying the cell.
 * @param {String} width - the width in any valid CSS unit, such as "10px" or "15cm".
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setCellWidth = function(widget, width){};

/**
 * Sets the height of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setHeight = function(height){};

/**
 * Set the horizontal alignment of widgets added to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {UiApp.HorizontalAlignment} horizontalAlignment - the desired alignment, such as UiApp.HorizontalAlignment.CENTER.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setHorizontalAlignment = function(horizontalAlignment){};

/**
 * Sets the id of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {String} id - the new id, which can be used to retrieve the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> from
     app.getElementById(id).
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setId = function(id){};

/**
 * Set the layout for this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>This is not currently functional.
 *
 * @param {Object} layout - 
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setLayoutData = function(layout){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> in pixels.
 *
 * @param {number} width - the new width in pixels.
 * @param {number} height - the new height in pixels.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setPixelSize = function(width, height){};

/**
 * Sets the size of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 * @param {String} height - the new height in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setSize = function(width, height){};

/**
 * Sets the amount of spacing between this panel's cells.
 *
 * @param {number} spacing - the spacing, in pixels.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setSpacing = function(spacing){};

/**
 * Sets one of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>'s style attributes to a new value. Valid attributes are <a
 href="/apps-script/ui_supportedstyles">listed here</a>; the values for each attribute are the
 same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttribute(&quot;background&quot;, &quot;black&quot;)
     .setStyleAttribute(&quot;color&quot;, &quot;green&quot;);
 </code></pre>
 *
 * @param {String} attribute - the CSS attribute, in camel-case ("fontSize", not "font-size"), <a
     href="/apps-script/ui_supportedstyles">as listed here</a>
 * @param {String} value - the CSS value
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setStyleAttribute = function(attribute, value){};

/**
 * Sets this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>'s style attributes. This is a convenience method that is equivalent
 to calling setStyleAttribute with every key/value pair in the attributes object. Valid
 attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>; the values for each
 attribute are the same as those available in CSS style sheets.

 <pre class="prettyprint"><code>
 // Change the widget&#39;s background to black and text color to green.
 widget.setStyleAttributes({background: &quot;black&quot;, color: &quot;green&quot;});
 </code></pre>
 *
 * @param {Object} attributes - an object of key/value pairs for the CSS attributes and values to set; valid
     attributes are <a href="/apps-script/ui_supportedstyles">listed here</a>
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setStyleAttributes = function(attributes){};

/**
 * Sets the style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setStyleName = function(styleName){};

/**
 * Sets the primary style name of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>This is useful for debugging but is otherwise of minimal use since there is no way to use
 custom stylesheets in UiApp.
 *
 * @param {String} styleName - the new style name.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setStylePrimaryName = function(styleName){};

/**
 * Sets the text tag of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {String} tag - the new text tag, which can be anything you wish to store with the widget.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setTag = function(tag){};

/**
 * Sets the hover title of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.

 <p>Not all browsers will show this.
 *
 * @param {String} title - the hover title.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setTitle = function(title){};

/**
 * Set the vertical alignment of widgets added to this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {UiApp.VerticalAlignment} verticalAlignment - the desired alignment, such as UiApp.VerticalAlignment.MIDDLE.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setVerticalAlignment = function(verticalAlignment){};

/**
 * Sets whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> is visible.
 *
 * @param {Boolean} visible - whether this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> should be visible or not.
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setVisible = function(visible){};

/**
 * Sets the width of this <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code>.
 *
 * @param {String} width - the new width in any CSS unit such as "10px" or "50%".
 *
 * @return {UiApp.VerticalPanel} the <code><s><a target='_blank' href='https://developers.google.com/apps-script/reference/ui/vertical-panel.html'>VerticalPanel</a></s></code> itself, useful for chaining.
 */
UiApp.VerticalPanel.prototype.setWidth = function(width){};

/** @constructor */
UiApp.Widget = function(){};

/**
 * Returns the id that has been assigned to this object.

 <p>This can be used in conjunction with app.getElementById() to retrieve a reference to this
 object.
 *
 * @return {String} the id that has been assigned to this object
 */
UiApp.Widget.prototype.getId = function(){};

/**
 * Gets the type of this object.
 *
 * @return {String} the object type
 */
UiApp.Widget.prototype.getType = function(){};

